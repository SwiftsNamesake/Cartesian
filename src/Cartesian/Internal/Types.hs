-- |
-- Module      : Cartesian.Internal.Types
-- Description :
-- Copyright   : (c) Jonatan H Sundqvist, 2015
-- License     : MIT
-- Maintainer  : Jonatan H Sundqvist
-- Stability   : experimental|stable
-- Portability : POSIX (not sure)
--

-- Created October 31 2015

-- TODO | - Use TemplateHaskell (?)
--        - Strictness

-- SPEC | -
--        -



--------------------------------------------------------------------------------------------------------------------------------------------
-- GHC Pragmas
--------------------------------------------------------------------------------------------------------------------------------------------
{-# LANGUAGE TemplateHaskell #-}



--------------------------------------------------------------------------------------------------------------------------------------------
-- API
--------------------------------------------------------------------------------------------------------------------------------------------
module Cartesian.Internal.Types where



--------------------------------------------------------------------------------------------------------------------------------------------
-- We'll need these
--------------------------------------------------------------------------------------------------------------------------------------------




--------------------------------------------------------------------------------------------------------------------------------------------
-- Types
--------------------------------------------------------------------------------------------------------------------------------------------

-- Types -----------------------------------------------------------------------------------------------------------------------------------

-- |
data BoundingBox v = BoundingBox { centreOf :: v, sizeOf :: v }

-- Classes ---------------------------------------------------------------------------------------------------------------------------------

-- |
-- TODO: Use GADT instead (?)
class Vector v f | v -> f where
  fromScalar :: f -> v


-- |
class HasX a f | a -> f where
  getX :: a -> f
  setX :: a -> f -> a


-- |
class HasY a f | a -> f where
  getY :: a -> f
  setY :: a -> f -> a


-- |
class HasZ a f | a -> f where
  getZ :: a -> f
  setZ :: a -> f -> a

-- Instances -------------------------------------------------------------------------------------------------------------------------------
